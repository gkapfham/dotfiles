# vim:fdm=marker:fdl=0:

# Mod {{{

# Set the mod key to Alt
set $mod Mod1

# }}}

# Looks {{{

# Define the gaps between windows
gaps inner 10
gaps outer 1

# Create and preview colors:
# https://thomashunter.name/i3-configurator/
# Note that the focused window is lighter than
# the unfocused and inactive windows

# Class                 border  bground text    indicator child_border
client.focused          #333333 #333333 #bcbcbc #333333   #333333
# client.focused_inactive #404040 #404040 #dfdfdf #484E50   #5F676A
client.focused_inactive #1c1c1c #1c1c1c #888888 #292D2E   #1C1C1C
client.unfocused        #1c1c1c #1c1c1c #888888 #292D2E   #1C1C1C
client.urgent           #2F343A #333333 #bcbcbc #5F8700   #5F8700
client.placeholder      #000000 #0C0C0C #FFFFFF #000000   #0C0C0C

# Font for window titles
font pango:Hack Nerd Font 9

# Wallpaper that is a solid purple color
exec_always --no-startup-id hsetroot -solid "#6E466E"

# Define the color scheme for the i3bar
# set $bg     #1C1C1C
set $bg     #262626
set $fg     #3A3A3A
set $hi     #FCE94F
set $ac     #D78700
set $tx     #5f8700
set $ia     #9E9E9E
set $be     #8FAF9F
set $yw     #F8F893
set $gn     #81C181
set $rd     #BF9B76
set $id     #F9F8FF
set $ce     #CEECEE

# Define the bar configuration;
# note that this runs i3status
# and that program has a separate configuration
bar {
  position top
  font pango:Hack Nerd Font Bold 8
  strip_workspace_numbers no
  separator_symbol " "
    colors {
        background          $bg
        statusline          $sl
        separator           $ce
        focused_workspace   $ia        $ia        $bg
        active_workspace    $tx        $tx        $bg
        inactive_workspace  $bg        $fg        $ia
        urgent_workspace    $ac        $ac        $bg
    }
  # run the i3status command that is configured
  # through a separate file stored in ~/.config/i3status/config
  status_command i3status
}

# }}}

# Startup {{{

# # Run numlockx to turn off numlock by default
# # This prevents numlock from displaying in i3lock-color
exec_always --no-startup-id numlockx off

# Run dunst to display the notifications
exec_always --no-startup-id ~/.config/dunst/scripts/dunst-launch.sh

# Run xbanish to hide the cursor by default
# Note that this is already default for some terminal
# windows, but not common for other programs like Firefox
exec --no-startup-id xbanish

# Run xbindkeys program to ensure that mouse buttons work as configured
exec --no-startup-id xbindkeys -f ~/.xbindkeysrc

# Run clipmenud to support capturing of the clipboard
exec --no-startup-id clipmenud

# Make Caps Lock behave like Ctrl:
exec --no-startup-id setxkbmap -option ctrl:nocaps

# Make short-pressed Ctrl behave like Escape:
exec --no-startup-id xcape -e 'Control_L=Escape'

# Use the gesture capabilities of the touchpad
exec --no-startup-id libinput-gestures

# Control the temperature of the screen(s)
exec --no-startup-id sct 6800

# Run picom to provide compositing, which especially
# seems to reduce screen artifacts for Zathura windows.
# Finally, see the separate picom configuration file
# for more details about how this program works.
exec --no-startup-id picom

# }}}

# Rofi {{{

# Rofi for programs and windows and more;
# Note that this can access the programs installed
# in the ~/.local/bin directory while also running
# installed programs and switching between both
# windows and workspaces
set $rofi-full-program "~/.config/i3/scripts/i3-run-rofi-full-path.sh"
bindsym Control+$mod+p exec $rofi-full-program

# Rofi for renaming a specific workspace; note that workspace
# names are organized in the i3 bar listing in an alpha-numerical
# fashion. This means that workspaces with only a number will
# come before workspaces with a number and a letter. For example,
# the workspaces will be listed as follows:
# --> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10a, 10b, 10c, 11, 12, 13, 14, 15.
# Finally, workspaces that are only words are going to appear after any
# of those that start with a number like the ones listed previously.
bindsym Control+$mod+w exec i3-msg rename workspace to $(rofi -dmenu -lines 0)

# Rofi for .desktop files
set $rofi-desktop "j4-dmenu-desktop --dmenu='rofi -p 'dmenu' -dmenu -i'"
bindsym Control+$mod+n exec $rofi-desktop

# Rofi for windows
set $rofi-windows "rofi -modi 'window' -show window -width 70"
bindsym Control+$mod+m exec $rofi-windows

# Rofi for combination
set $rofi-combo "rofi -combi-modi window#run#drun -show combi -width 70"
bindsym Control+$mod+o exec $rofi-combo

# Rofi for workspaces
set $rofi-switch-workspace "~/.config/i3/scripts/i3-switch-workspace.sh"
bindsym Control+$mod+v exec $rofi-switch-workspace

# Rofi for system control
set $rofi-system "~/.config/i3/scripts/i3-system.sh 'i3-msg exit'"
bindsym Control+$mod+plus exec $rofi-system

# Rofi for keymap reminders
set $rofi-reminder "~/.config/i3/scripts/i3-keymaps.sh"
bindsym Control+$mod+r exec $rofi-reminder

# Rofi for the display and insertion of an emoji
# Only show the five most recent icons in the menu bar
bindsym Control+$mod+y exec "rofimoji --max-recent 10"

# Rofi for the display and copying of content to the clipboard
set $rofi-copy-to-clipboard "~/.config/i3/scripts/i3-copy-to-clipboard.sh"
bindsym Control+$mod+t exec $rofi-copy-to-clipboard

# Rofi for the display and insertion of content to the clipboard
set $rofi-insert-from-clipboard "~/.config/i3/scripts/i3-insert-from-clipboard.sh"
bindsym Control+$mod+g exec $rofi-insert-from-clipboard

# }}}

# Float {{{

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# }}}

# Programs {{{

# Terminal
bindsym $mod+Return exec kitty

# }}}

# Workspaces {{{

# 1 through 10
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"

# 10 through 20
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# Go to the left workspace on the same monitor
bindsym Control+$mod+h workspace prev_on_output

# Go to the right workspace on the same monitor
bindsym Control+$mod+l workspace next_on_output

# Move window to the workspace on the right
bindsym Control+Shift+h move to workspace prev

# Move window to the workspace on the left
bindsym Control+Shift+l move to workspace next

# Move to the previously focused workspace
bindsym Control+$mod+b workspace back_and_forth

# Switch between workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Move window to the scratchpad
bindsym Control+Shift+s move scratchpad

# Take window from the scratchpad as a float
# This is a toggle-able command; returns to scratchpad
bindsym Control+$mod+s scratchpad show

# Switch to a specified workspace
# --> 1 through 10
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Switch to a specified (extended) workspace
# --> 11 through 20
set $mode_switch_workspace_extended " Workspace Jump 11-20"
mode $mode_switch_workspace_extended {
    bindsym $mod+1 workspace number 11; mode "default"
    bindsym $mod+2 workspace number 12; mode "default"
    bindsym $mod+3 workspace number 13; mode "default"
    bindsym $mod+4 workspace number 14; mode "default"
    bindsym $mod+5 workspace number 15; mode "default"
    bindsym $mod+6 workspace number 16; mode "default"
    bindsym $mod+7 workspace number 17; mode "default"
    bindsym $mod+8 workspace number 18; mode "default"
    bindsym $mod+9 workspace number 19; mode "default"
    bindsym $mod+0 workspace number 20; mode "default"
    bindsym Escape mode "default"
}

# Enter the extended workspace switching mode
bindsym $mod+w mode $mode_switch_workspace_extended

# Switch to a specified (super-extended) workspace
# --> 21 through 30
set $mode_switch_workspace_super_extended " Workspace Jump 21-30"
mode $mode_switch_workspace_super_extended {
    bindsym $mod+1 workspace number 21; mode "default"
    bindsym $mod+2 workspace number 22; mode "default"
    bindsym $mod+3 workspace number 23; mode "default"
    bindsym $mod+4 workspace number 24; mode "default"
    bindsym $mod+5 workspace number 25; mode "default"
    bindsym $mod+6 workspace number 26; mode "default"
    bindsym $mod+7 workspace number 27; mode "default"
    bindsym $mod+8 workspace number 28; mode "default"
    bindsym $mod+9 workspace number 29; mode "default"
    bindsym $mod+0 workspace number 30; mode "default"
    bindsym Escape mode "default"
}

# Enter the super-extended workspace switching mode
bindsym $mod+Shift+w mode $mode_switch_workspace_super_extended

# Move focused container to workspace
# --> 1 through 10
bindsym Control+$mod+1 move container to workspace number $ws1
bindsym Control+$mod+2 move container to workspace number $ws2
bindsym Control+$mod+3 move container to workspace number $ws3
bindsym Control+$mod+4 move container to workspace number $ws4
bindsym Control+$mod+5 move container to workspace number $ws5
bindsym Control+$mod+6 move container to workspace number $ws6
bindsym Control+$mod+7 move container to workspace number $ws7
bindsym Control+$mod+8 move container to workspace number $ws8
bindsym Control+$mod+9 move container to workspace number $ws9
bindsym Control+$mod+0 move container to workspace number $ws10

# Move to a specified (extended) workspace
# --> 11 through 20
set $mode_move_workspace " Workspace Move 11-20"
mode $mode_move_workspace {
    bindsym Control+$mod+1 move container to workspace number $ws11; mode "default"
    bindsym Control+$mod+2 move container to workspace number $ws12; mode "default"
    bindsym Control+$mod+3 move container to workspace number $ws13; mode "default"
    bindsym Control+$mod+4 move container to workspace number $ws14; mode "default"
    bindsym Control+$mod+5 move container to workspace number $ws15; mode "default"
    bindsym Control+$mod+6 move container to workspace number $ws16; mode "default"
    bindsym Control+$mod+7 move container to workspace number $ws17; mode "default"
    bindsym Control+$mod+8 move container to workspace number $ws18; mode "default"
    bindsym Control+$mod+9 move container to workspace number $ws19; mode "default"
    bindsym Control+$mod+0 move container to workspace number $ws20; mode "default"
    bindsym Escape mode "default"
}

# Enter the extended workspace move mode
bindsym $mod+e mode $mode_move_workspace

# Move to a specified (super-extended) workspace
# --> 21 through 30
set $mode_move_workspace_super_extended " Workspace Move 21-30"
mode $mode_move_workspace_super_extended {
    bindsym Control+$mod+1 move container to workspace number $ws21; mode "default"
    bindsym Control+$mod+2 move container to workspace number $ws22; mode "default"
    bindsym Control+$mod+3 move container to workspace number $ws23; mode "default"
    bindsym Control+$mod+4 move container to workspace number $ws24; mode "default"
    bindsym Control+$mod+5 move container to workspace number $ws25; mode "default"
    bindsym Control+$mod+6 move container to workspace number $ws26; mode "default"
    bindsym Control+$mod+7 move container to workspace number $ws27; mode "default"
    bindsym Control+$mod+8 move container to workspace number $ws28; mode "default"
    bindsym Control+$mod+9 move container to workspace number $ws29; mode "default"
    bindsym Control+$mod+0 move container to workspace number $ws30; mode "default"
    bindsym Escape mode "default"
}

# Enter the super-extended workspace move mode
bindsym $mod+Shift+e mode $mode_move_workspace_super_extended

# Create a new workspace
set $create-workspace "~/.config/i3/scripts/i3-create-workspace.sh"
bindsym $mod+n exec --no-startup-id $create-workspace

# }}}

# Focus {{{

# Change focus with vim keybindings
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# Change focus with cursor keys
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# }}}

# Monitors {{{

# Note that the following two commands are like "toggles" in that
# i3 will "wrap around" if you are already on "up" and the command
# moves the focus to "up", thereby moving it to "bottom"

# Move focus to the:

# --> top (i.e., external) monitor and wrap around
# ** --> Using the keyboard
bindsym Control+$mod+u focus output up

# ** --> Using the key-command generated by the mouse
bindsym Control+$mod+Tab focus output up

# Move container to the:

# Note that I tried to "chain" this with a focus output up and it
# did not work or did not work reliably after testing

# --> top (i.e., external) monitor and wrap around
bindsym Control+$mod+i move container to output up

# Note that both of these commands are not strictly needed due
# to the fact that up/down commands are actually toggles

# Moving workspace to the:

# --> top (i.e., external) monitor
bindsym Control+$mod+less move workspace to output up

# --> bottom (i.e., laptop) monitor
bindsym Control+$mod+greater move workspace to output down

# Always move to the mouse to the newest output
# Note that this is currently the default behavior, with
# the other option being 'none' which will not move the
# cursor to the new output when you move the focus there
mouse_warping output

# }}}

# Layout {{{

# Change container layout to stacked, tabbed, or toggle split
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+i layout toggle split

# Toggle between tiling and floating windows
bindsym $mod+Shift+space floating toggle

# Change focus between tiling or floating windows
bindsym $mod+space focus mode_toggle

# Toggle fullscreen mode for focused container
# This removes the i3bar at the screen's top
bindsym $mod+f fullscreen toggle

# Split in horizontal orientation
bindsym $mod+backslash split h
bindsym $mod+Shift+backslash split h

# Split in vertical orientation
bindsym $mod+minus split v
bindsym $mod+Shift+minus split v

# }}}

# Move on Specific Workspace {{{

# Move focused window with vim keybindings
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# Move focused window with cursor keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# }}}

# Kill {{{

# Kill focused window
bindsym $mod+Shift+q kill

# }}}

# System {{{

# Dim the screen after ten minutes
exec --no-startup-id xset dpms 600

# Reload the i3 window manager
bindsym $mod+Shift+c reload

# Restart i3 inplace
bindsym $mod+Shift+r restart

# }}}

# Resize {{{

# Resize window mode
mode "Resize a Window" {
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt
        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt
        # resize to:
        # --> 1080p resolution required by OBS
        #     for Termite and Chromium
        bindsym v resize set 1930 1135
        # --> 1080p resolution required by OBS
        #     for VSCode
        bindsym c resize set 1920 1080
        # --> small box for scene triggers in OBS
        bindsym w resize set 300 300
        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

# Enter the resize mode
bindsym $mod+r mode "Resize a Window"

# }}}

# Media {{{

# Decrease the volume
bindsym XF86AudioLowerVolume exec "pactl set-sink-volume @DEFAULT_SINK@ '-5%'"

# Increase the volume
bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume @DEFAULT_SINK@ '+5%'"

# Mute the audio
bindsym XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle"

# Increase the brightness of the screen
bindsym XF86MonBrightnessUp exec "light -A 5"

# Decrease the brightness of the screen
bindsym XF86MonBrightnessDown exec "light -U 5"

# Set to maximum brightness
bindsym $mod+Shift+b exec "light -S 100"

# }}}

# Screenshots {{{

# Perform a full screen capture of the active window and save to a file
bindsym Print exec "maim -i $(xdotool getactivewindow) ~/media/screenshots/`date +%Y-%m-%d_%H:%M:%S`.png"

# Perform a full screen capture of the active window and copy to the clipboard
bindsym Control+Print exec "exec maim -i $(xdotool getactivewindow) | xclip -selection clipboard -t image/png"

# Perform a selection caption and copy to the clipboard
bindsym Shift+Print exec "exec maim -s | xclip -selection clipboard -t image/png"

# }}}
